<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicau.devicemanagement.mapper.TeacherMapper">

    <resultMap type="Teacher" id="TeacherResult">
        <result property="uid" column="uid"/>
        <result property="employeeId" column="employee_id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="tel" column="tel"/>
        <result property="college" column="college"/>
        <result property="major" column="major"/>
        <result property="roleId" column="role_id"/>
        <result property="isDel" column="is_del"/>
    </resultMap>

    <sql id="selectTeacherVo">
        select uid,
               employee_id,
               name,
               password,
               tel,
               college,
               major,
               role_id,
               is_del
        from teacher
    </sql>

    <select id="selectTeacherList" parameterType="Teacher" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        <where>
            <if test="employeeId != null  and employeeId != ''">and employee_id = #{employeeId}</if>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="password != null  and password != ''">and password = #{password}</if>
            <if test="tel != null  and tel != ''">and tel = #{tel}</if>
            <if test="college != null  and college != ''">and college = #{college}</if>
            <if test="major != null  and major != ''">and major = #{major}</if>
            <if test="roleId != null  and roleId != ''">and role_id = #{roleId}</if>
            <if test="isDel != null ">and is_del = #{isDel}</if>
        </where>
    </select>

    <select id="selectTeacherByUid" parameterType="String" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        where uid = #{uid}
    </select>

    <select id="selectUidByEmployeeId" resultType="java.lang.String">
        select `uid`
        from `teacher`
        where `employee_id` = #{employeeId}
    </select>

    <select id="selectAdminUid" resultType="java.lang.String">
        select `uid`
        from `teacher` as t inner join `roles` as r
        on t.`role_id` = r.`role_id`
        where r.name = "admin"
    </select>

    <insert id="insertTeacher" parameterType="Teacher">
        insert into teacher
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">#{uid},</if>
            <if test="employeeId != null and employeeId != ''">#{employeeId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="tel != null and tel != ''">#{tel},</if>
            <if test="college != null and college != ''">#{college},</if>
            <if test="major != null and major != ''">#{major},</if>
            <if test="roleId != null and roleId != ''">#{roleId},</if>
            <if test="isDel != null">#{isDel},</if>
        </trim>
    </insert>

    <update id="updateTeacher" parameterType="Teacher">
        update teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="employeeId != null and employeeId != ''">employee_id = #{employeeId},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="tel != null and tel != ''">tel = #{tel},</if>
            <if test="college != null and college != ''">college = #{college},</if>
            <if test="major != null and major != ''">major = #{major},</if>
            <if test="roleId != null and roleId != ''">role_id = #{roleId},</if>
            <if test="isDel != null">is_del = #{isDel},</if>
        </trim>
        where uid = #{uid}
    </update>

    <delete id="deleteTeacherByUid" parameterType="String">
        delete
        from teacher
        where uid = #{uid}
    </delete>

    <delete id="deleteTeacherByUids" parameterType="String">
        delete from teacher where uid in
        <foreach item="uid" collection="array" open="(" separator="," close=")">
            #{uid}
        </foreach>
    </delete>
</mapper>